!!! 5
//if lt IE 7
    <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang="en">
//if IE 7
    <html class="no-js lt-ie9 lt-ie8" lang="en">
//if IE 8
    <html class="no-js lt-ie9" lang="en">
//[if gt IE 8]><!
html(class='no-js', lang='en')
    //<![endif]
    head
        script(src="../W.js")
    body
        p view the console
        script
            //
            console.log("running normal loop");
            // #A normal for loop (could be each)
            for (var i = 0; i < 10; i++) {
                console.log(i);
            }

            // works well, but not when there is a timeout, like below
            // # a loop with timeout
            // as the timeout executes after the loop has finished
            // i will alway be 10
            console.log("running normal loop with a timeout");
            for (var i = 0; i < 10; i++) {
                setTimeout(function () {
                    console.log(i);
                }, 10)
            }

            // Setting another timeout so the below code executes
            // after the first
            setTimeout(function () {

                // # An asyncrous loop with W.loop.
                // the arguments are:
                //    1. the number of times to call the loop
                //    2. the function that is called each iteration*
                //    3. a function that is called when each iteration is finished.
                //       this is optional.
                //       
                //  * the function that is called each iteraction is responsible
                //  to for calling next() when it is finished. there is also an
                //  end() while will cancel any futher iterations
                console.log("running the asyncrous loop");
                W.loop(10, function (i, next, end) {
                    setTimeout(function () {
                        console.log(i);
                        next();
                    }, 10);
                });

            }, 10);